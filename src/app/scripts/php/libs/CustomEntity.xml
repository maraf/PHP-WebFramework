<?xml version="1.0" encoding="utf-8" ?>
<taglib>
  <name>Custom entity.</name>
  <classname>CustomEntity</classname>
  <classpath>php.libs</classpath>
  <count>*</count>
  <comment>
    Knihovna pro práci s uživatelskými entitami.
  </comment>
  <fulltag>
    <name>form</name>
    <function>form</function>
    <attribute>
      <attname>name</attname>
      <required />
      <comment>Název entity, pro kterou se má vygenerovat formulář.</comment>
    </attribute>
    <attribute>
      <attname>deleteIfEmpty</attname>
      <atttype>bool</atttype>
      <attdef>false</attdef>
      <comment>
        Pokud "true" a ve vstupu od uživatele přijdou všechny hodnoty prázdné, automaticky editovaný záznam smaže.
        Prázdné hodnoty se hledají pouze v aktuálně načtených fieldech.
      </comment>
    </attribute>
    <attribute>
      <attname>langIds</attname>
      <comment>Id jazyků, pro které mají zpracovávat lokalizované pole.</comment>
    </attribute>
    <attribute>
      <attname>key</attname>
      <prefix />
      <comment>Primární klíče pro editaci záznamu. Klíčem je název sloupce.</comment>
    </attribute>
    <comment>
      Vygeneruje formulář pro přidání/úpravu záznamu v uživatelské entitě.
      Při editaci je nutné uvést všechny primární klíče záznamu, který se má editovat.
    </comment>
  </fulltag>
  <tag>
    <name>register</name>
    <function>register</function>
    <attribute>
      <attname>name</attname>
      <required />
      <comment>Název sloupce, který se má zaregistrovat do dotazu.</comment>
    </attribute>
    <comment>
      Zaregistruje do dotazu sloupec podle "name" i přesto, že se pomocí custom property nikde nevypisuje.
      Je možné použít "*" pro výběr vše sloupců z tabulky.
    </comment>
  </tag>
  <tag>
    <name>emptyDirectory</name>
    <function>emptyDirectory</function>
    <attribute>
      <attname>name</attname>
      <required />
      <comment>Název sloupce, pro který se má vytvořit.</comment>
    </attribute>
    <attribute>
      <attname>parentDirId</attname>
      <required />
      <comment>Id rodičovské složky, ve které má být vytvořena nová.</comment>
    </attribute>
    <attribute>
      <attname>nameFormat</attname>
      <required />
      <comment>Formátovací řetězec pro název nové složky. Např.: "{id} - {name}".</comment>
    </attribute>
  </tag>
  <fulltag>
    <name>createIfEmpty</name>
    <function>createIfEmpty</function>
    <attribute>
      <attname>name</attname>
      <required />
      <atttype>string</atttype>
      <comment>Název fieldu, který se má nastavovat.</comment>
    </attribute>
    <attribute>
      <attname>nameIndex</attname>
      <atttype>number</atttype>
      <attdef>-1</attdef>
      <atttype>string</atttype>
      <comment>Index, pokud je "name" typu pole.</comment>
    </attribute>
    <attribute>
      <attname>source</attname>
      <required />
      <atttype>string</atttype>
      <comment>Název entity, ze které se mají čerpat data, nebo pole záznamů.</comment>
    </attribute>
    <attribute>
      <attname>keyColumn</attname>
      <required />
      <atttype>string</atttype>
      <comment>Název sloupce, který identifikuje klíč připojovaného záznamu záznamu.</comment>
    </attribute>
    <attribute>
      <attname>valueColumn</attname>
      <required />
      <atttype>string</atttype>
      <comment>Název sloupce, kam se uloží hodnota zadaná uživatelem.</comment>
    </attribute>
    <attribute>
      <attname>tableName</attname>
      <atttype>string</atttype>
      <comment>Pokud je source polem, pak je tento atribut povinný a udává název tabulky, kam se záznam založit.</comment>
    </attribute>
    <attribute>
      <attname>value</attname>
      <atttype>string</atttype>
      <prefix />
      <comment>Seznam sloupců s dodatečnými hodnota pro založení záznamu.</comment>
    </attribute>
    <comment>
      Typické použití: Automatické založené položky pro SingleReference, kdy pomocí select2 (nebo jiné) uživatel zadal položku, která v číselníkové tabulky ještě není.
    </comment>
  </fulltag>
  <fulltag>
    <name>list</name>
    <function>getList</function>
    <attribute>
      <attname>name</attname>
      <required />
      <comment>Název entity, která se má vypsat.</comment>
    </attribute>
    <attribute>
      <attname>filter</attname>
      <prefix />
      <comment>Filtry, kterým data musí vyhovovat.</comment>
    </attribute>
    <attribute>
      <attname>orderBy</attname>
      <prefix />
      <comment>Nastavení řazení. Klíčem je název sloupce, hodnota může být "asc" nebo "desc".</comment>
    </attribute>
    <comment>
      Vypíše seznam dat z entity "name".
      List model se nastaví do "ce:list", vypisovat pak lze pomocí "ce:*" (atribut) nebo "ce:_" (celá položka).
    </comment>
  </fulltag>
  <fulltag>
    <name>deleter</name>
    <function>deleter</function>
    <lookless>true</lookless>
    <attribute>
      <attname>name</attname>
      <required />
      <comment>Název entity, pro kterou se má vygenerovat formulář.</comment>
    </attribute>
    <anyAttribute>
      <comment>
        Slouží pro where klauzuli při mazání objektů (umožňuje mazat více objektů).
      </comment>
    </anyAttribute>
    <comment>
      Smaže všechny záznamy z entity podle "params".
    </comment>
  </fulltag>
  <property>
    <name>list</name>
    <getfunction>getListData</getfunction>
    <comment>
      Vrací list model uvnitř "ce:list".
    </comment>
  </property>
  <anyProperty>
    <comment>
      Uvnitř "ce:list" vrací fieldy aktuální položky.
      Uvnitř "ce:form" vrací fieldy editovaného modelu.
    </comment>
  </anyProperty>
</taglib>

